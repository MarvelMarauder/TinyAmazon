@page "/admin/books/edit/{id:long}"
@page "/admin/books/create"
@inherits OwningComponentBase<IBookstoreRepository>

<style>
    div.validation-message {
        color: rgb(220,53,69);
        font-weight: bold;
        /*I made the font style bold for error messages*/
    }
</style>

<h3 class="bg-@ThemeColor text-white text-center p-1">@TitleText a Project </h3>

<EditForm Model="p" OnValidSubmit="SaveBook">

    <DataAnnotationsValidator></DataAnnotationsValidator>

    <div class="form-group">
        <label>Book ID</label>
        <input class="form-control" disabled value="@p.BookId" />
    </div>

    <div class="form-group">
        <label>Title:</label>
        <ValidationMessage For="@(() => p.Title)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="@p.Title" placeholder="Book Title"></InputText>
    </div>

    <div class="form-group">
        <label>Author:</label>
        <ValidationMessage For="@(() => p.Author)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="@p.Author" placeholder="John Doe"></InputText>
    </div>

    <div class="form-group">
        <label>Publisher:</label>
        <ValidationMessage For="@(() => p.Publisher)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="@p.Publisher" placeholder="Publisher Inc"></InputText>
    </div>

    <div class="form-group">
        <label>ISBN:</label>
        <ValidationMessage For="@(() => p.Isbn)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="@p.Isbn" placeholder="0000-0000-0000"></InputText>
    </div>

    <div class="form-group">
        <label>Classification:</label>
        <ValidationMessage For="@(() => p.Classification)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="@p.Classification" placeholder="Fiction"></InputText>
    </div>

    <div class="form-group">
        <label>Category:</label>
        <ValidationMessage For="@(() => p.Category)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="@p.Category" placeholder="Fantasy"></InputText>
    </div>

    <div class="form-group">
        <label>Page Count:</label>
        <ValidationMessage For="@(() => p.PageCount)"></ValidationMessage>
        <InputNumber class="form-control" @bind-Value="@p.PageCount" placeholder="100"></InputNumber>
    </div>

    <div class="form-group">
        <label>Price:</label>
        <ValidationMessage For="@(() => p.Price)"></ValidationMessage>
        <InputNumber class="form-control" @bind-Value="@p.Price" placeholder="3.00"></InputNumber>
    </div>

    <button type="submit" class="btn btn-@ThemeColor">Save</button>
    <a class="btn btn-secondary" href="/admin/books">Cancel</a>

</EditForm>

@code {

    [Parameter]
    public long Id { get; set; } = 0;

    public string ThemeColor => Id == 0 ? "primary" : "warning";

    public string TitleText => Id == 0 ? "Create" : "Edit";

    public Book p { get; set; } = new Book();

    public IBookstoreRepository repo => Service;

    protected override void OnParametersSet()
    {
        if (Id != 0)
        {
            p = repo.Books.FirstOrDefault(x => x.BookId == Id);
        }
    }

    public void SaveBook()
    {
        if (Id == 0)
        {
            repo.CreateBook(p);
        }
        else
        {
            repo.SaveBook(p);
        }
        NavManager.NavigateTo("/admin/books");
    }
    [Inject]
    public NavigationManager NavManager { get; set; }

}